@model IEnumerable<GroupBoizCommon.DTO.SystemAccountDTO>

@{
    ViewData["Title"] = "Account Management Page";
}

<section class="account-management">
    <div class="container">
        <h2 class="tm-margin-b-30">Manage Account</h2>

        <!-- Account list table -->
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Role</th> <!-- Add Role column -->
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.AccountId</td>
                        <td>@user.AccountName</td>
                        <td>@user.AccountEmail</td>
                        <td>@user.AccountRole</td> <!-- Display Role name -->
                        <td>
                            <a href="/account/details/@user.AccountId" class="btn btn-info btn-sm">View Details</a>
                            <button class="btn btn-warning btn-sm" onclick="openEditModal(@user.AccountId, '@user.AccountName', '@user.AccountEmail', '@user.AccountRole')">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteAccount(@user.AccountId)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</section>

<!-- Account update modal -->
<div class="modal fade" id="editAccountModal" tabindex="-1" aria-labelledby="editAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAccountModalLabel">Edit Account</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editAccountForm">
                    <input type="hidden" id="editAccountId" name="AccountId" />

                    <div class="mb-3">
                        <label for="editAccountName" class="form-label">Full Name</label>
                        <input type="text" id="editAccountName" name="AccountName" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="editAccountEmail" class="form-label">Email</label>
                        <input type="email" id="editAccountEmail" name="AccountEmail" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="editAccountPassword" class="form-label">Password (only change if needed)</label>
                        <input type="password" id="editAccountPassword" name="AccountPassword" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="editAccountRole" class="form-label">Role</label>
                        <select id="editAccountRole" name="AccountRole" class="form-control">
                            <option value="1">Staff</option>
                            <option value="2">Lecturer</option>
                        </select>
                    </div>

                    <button type="button" class="btn btn-primary" onclick="submitEditForm()">Update</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript Code -->
<script>
    function openEditModal(id, name, email, role) {
        document.getElementById("editAccountId").value = id;
        document.getElementById("editAccountName").value = name;
        document.getElementById("editAccountEmail").value = email;
        document.getElementById("editAccountRole").value = role;

        // Initialize and show modal using Bootstrap Modal API
        var myModal = new bootstrap.Modal(document.getElementById("editAccountModal"));
        myModal.show();
    }

    async function submitEditForm() {
        const accountId = document.getElementById("editAccountId").value;
        const accountName = document.getElementById("editAccountName").value;
        const accountEmail = document.getElementById("editAccountEmail").value;
        const accountPassword = document.getElementById("editAccountPassword")?.value || "";
        const accountRole = document.getElementById("editAccountRole").value;

        const requestData = {
            AccountId: accountId,
            AccountName: accountName,
            AccountEmail: accountEmail,
            AccountPassword: accountPassword,
            AccountRole: accountRole
        };

        try {
            const response = await fetch(`/account/edit?id=${accountId}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(requestData)
            });

            if (response.ok) {
                alert("Update successful!");
                location.reload();
            } else {
                const errorMsg = await response.text();
                alert("Update failed: " + errorMsg);
            }
        } catch (error) {
            alert("System error: " + error.message);
        }
    }

    async function deleteAccount(accountId) {
        if (!confirm("Are you sure you want to delete this account?")) {
            return;
        }

        try {
            const response = await fetch(`/account/deleteaccount/${accountId}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                }
            });

            if (response.ok) {
                const data = await response.json();
                alert(data.message);
                location.reload();
            } else {
                const errorMsg = await response.text();
                alert("Delete failed: " + errorMsg);
            }
        } catch (error) {
            alert("System error: " + error.message);
        }
    }
</script>
